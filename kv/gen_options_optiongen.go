// Code generated by optiongen. DO NOT EDIT.
// optiongen: github.com/timestee/optiongen

package kv

import "io"

type Options struct {
	OnWatchError  WatchError
	SecertKeyring io.Reader
}

func (cc *Options) SetOption(opt Option) {
	_ = opt(cc)
}

func (cc *Options) ApplyOption(opts ...Option) {
	for _, opt := range opts {
		_ = opt(cc)
	}
}

func (cc *Options) GetSetOption(opt Option) Option {
	return opt(cc)
}

type Option func(cc *Options) Option

func WithOnWatchError(v WatchError) Option {
	return func(cc *Options) Option {
		previous := cc.OnWatchError
		cc.OnWatchError = v
		return WithOnWatchError(previous)
	}
}

func WithSecertKeyring(v io.Reader) Option {
	return func(cc *Options) Option {
		previous := cc.SecertKeyring
		cc.SecertKeyring = v
		return WithSecertKeyring(previous)
	}
}

func NewOptions(opts ...Option) *Options {
	cc := newDefaultOptions()

	for _, opt := range opts {
		_ = opt(cc)
	}
	if watchDogOptions != nil {
		watchDogOptions(cc)
	}
	return cc
}

func InstallOptionsWatchDog(dog func(cc *Options)) {
	watchDogOptions = dog
}

var watchDogOptions func(cc *Options)

func newDefaultOptions() *Options {

	cc := &Options{}

	for _, opt := range [...]Option{
		WithOnWatchError(nil),
		WithSecertKeyring(nil),
	} {
		_ = opt(cc)
	}

	return cc
}
