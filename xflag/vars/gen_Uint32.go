// Code generated by gotemplate. DO NOT EDIT.

package vars

import (
	"fmt"
	"reflect"
)

//template type Var(KType,ParseKeyFunc)

type Uint32 uint32

var typeNameUint32 = ""

func init() {
	var ss uint32
	typeNameUint32 = reflect.TypeOf(ss).Name()
}
func NewUint32(p *uint32) *Uint32 { return (*Uint32)(p) }

// Setters for each of the types
func (f *Uint32) Set(s string) error {
	v, err := parseUint32(s)
	if err != nil {
		return err
	}
	*f = Uint32(v)
	return nil
}
func (f *Uint32) TypeName() string { return typeNameUint32 }
func (f *Uint32) Get() interface{} { return uint32(*f) }
func (f *Uint32) String() string   { return fmt.Sprintf("%v", *f) }
func (f *Uint32) Usage() string    { return "xconf/xflag/vars" }
