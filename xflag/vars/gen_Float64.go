// Code generated by gotemplate. DO NOT EDIT.

package vars

import (
	"fmt"
	"reflect"
)

//template type Var(KType,ParseKeyFunc)

// ParseKeyFunc 默认解析函数，替换

// KType 默认类型，替换

// Var type
type Float64 struct {
	v           *float64
	stringAlias func(s string) string
}

var typeNameFloat64 = ""

func init() {
	var ss float64
	typeNameFloat64 = reflect.TypeOf(ss).Name()
}

// NewVar new func
func NewFloat64(p *float64, stringAlias func(s string) string) *Float64 {
	return &Float64{
		v:           p,
		stringAlias: stringAlias,
	}
}

// Set for each of the types
func (f *Float64) Set(s string) error {
	v, err := parseFloat64(f.stringAlias(s))
	if err != nil {
		return err
	}
	*f.v = v
	return nil
}

// TypeName 类型名称
func (f *Float64) TypeName() string { return typeNameFloat64 }

// Get 返回类型值
func (f *Float64) Get() interface{} { return *f.v }

// String 获取Set设置的字符串数据？或数据转换到的？
func (f *Float64) String() string { return fmt.Sprintf("%v", *f.v) }

// Usage FlagSet使用
func (f *Float64) Usage() string { return "xconf/xflag/vars" }
