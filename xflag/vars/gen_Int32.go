// Code generated by gotemplate. DO NOT EDIT.

package vars

import (
	"fmt"
	"reflect"
)

//template type Var(KType,ParseKeyFunc)

// ParseKeyFunc 默认解析函数，替换

// KType 默认类型，替换

// Var 类型
type Int32 int32

var typeNameInt32 = ""

func init() {
	var ss int32
	typeNameInt32 = reflect.TypeOf(ss).Name()
}
func NewInt32(p *int32) *Int32 { return (*Int32)(p) }

// Setters for each of the types
func (f *Int32) Set(s string) error {
	v, err := parseInt32(s)
	if err != nil {
		return err
	}
	*f = Int32(v)
	return nil
}
func (f *Int32) TypeName() string { return typeNameInt32 }
func (f *Int32) Get() interface{} { return int32(*f) }
func (f *Int32) String() string   { return fmt.Sprintf("%v", *f) }
func (f *Int32) Usage() string    { return "xconf/xflag/vars" }
