// Code generated by gotemplate. DO NOT EDIT.

package vars

import (
	"fmt"
	"reflect"
)

//template type Var(KType,ParseKeyFunc)

type Int8 int8

var typeNameInt8 = ""

func init() {
	var ss int8
	typeNameInt8 = reflect.TypeOf(ss).Name()
}
func NewInt8(p *int8) *Int8 { return (*Int8)(p) }

// Setters for each of the types
func (f *Int8) Set(s string) error {
	v, err := parseInt8(s)
	if err != nil {
		return err
	}
	*f = Int8(v)
	return nil
}
func (f *Int8) TypeName() string { return typeNameInt8 }
func (f *Int8) Get() interface{} { return int8(*f) }
func (f *Int8) String() string   { return fmt.Sprintf("%v", *f) }
func (f *Int8) Usage() string    { return "xconf/xflag/vars" }
